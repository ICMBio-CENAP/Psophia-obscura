
model {

## Priors

# intercepts
#alpha.psi ~ dnorm(0, 0.01)
#alpha.p ~ dnorm(0, 0.01)

# random site effects
for (i in 1:nsite){
   alpha.psi[i] ~ dnorm(mu.psi, tau.alpha.psi)
   alpha.p[i] ~ dnorm(mu.p, tau.alpha.p)
   }
mu.psi ~ dnorm(0, 0.01)  # hyperparameter
tau.alpha.psi <- 1 / (sd.alpha.psi*sd.alpha.psi)  # hyperparameter
sd.alpha.psi ~ dunif(0, 2)
mu.p ~ dnorm(0, 0.01)  # hyperparameter
tau.alpha.p <- 1 / (sd.alpha.p*sd.alpha.p)  # hyperparameter
sd.alpha.p ~ dunif(0, 2)

# psi coefficients
for (j in 1:4) {  # five predictors for psi: elevation, basalArea, distEdge and recovery
  beta.psi[j] ~ dnorm(0, 0.01)
}

# p coefficients
beta.p ~ dnorm(0, 0.01)

# random year effects (for p)
for (k in 1:nyear){
   eps[k] ~ dnorm(0, tau.year)
} # k
tau.year <- 1 / (sd.year*sd.year)
sd.year ~ dunif(0, 1)

# gamma and phi varying by year
for (k in 1:(nyear-1)) {
  gamma[k] ~ dunif(0, 1)
  phi[k] ~ dunif(0, 1)
}


## Likelihood

# ecological model
for (i in 1:nsite){
  logit(psi[i,1]) <- alpha.psi[site[i]] + beta.psi[1]*elevation[i] + beta.psi[2]*basalArea[i] + beta.psi[3]*distEdge[i] + beta.psi[4]*recovery[i]
  z[i,1] ~ dbern(psi[i,1])

for (k in 2:nyear){
  muZ[i,k] <- z[i,k-1]*phi[k-1] + (1-z[i,k-1])*gamma[k-1]
  z[i,k] ~ dbern(muZ[i,k])
  } #k
 } #i

## Observation model
for (i in 1:nsite){
  for (k in 1:nyear){
    logit(p[i,k]) <- alpha.p[site[i]] + eps[k]
    muy[i,k] <- z[i,k]*p[i,k] # can only be detected if z=1
    y[i,k] ~ dbin(muy[i,k], nrep[i,k])
    } #k
  } #i

# Derived parameters: Population occupancy, growth rate and turnover
#psi[i,1] <- psi[i,1] # turned off because it was already defined in the likelihood
n.occ[1] <- sum(z[1:nsite,1])
for (i in 1:nsite){
  for (k in 2:nyear){
    psi[i,k] <- psi[i,k-1]*phi[k-1] + (1-psi[i,k-1])*gamma[k-1]
    } #k
  } #i
  
for (k in 2:nyear){
  n.occ[k] <- sum(z[,k])
  growthr[k-1] <- mean(psi[,k])/mean(psi[,k-1]) # originally we had growthr[k]. JAGS seem to dislike vectoring going from 2..K.
  turnover[k-1] <- (1 - mean(psi[,k-1])) * gamma[k-1]/mean(psi[,k])
 } #k

}

