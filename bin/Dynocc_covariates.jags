
model {

  ## Priors
  
  # intercepts
  alpha.psi ~ dnorm(0, 0.01)
  alpha.phi ~ dnorm(0, 0.01)
  alpha.gam ~ dnorm(0, 0.01)
  alpha.p ~ dnorm(0, 0.01)
  
  # coefficients
  for (j in 1:4) {
      beta.psi[j] ~ dnorm(0, 0.01)
      beta.phi[j] ~ dnorm(0, 0.01)
      beta.gam[j] ~ dnorm(0, 0.01)
      beta.p[j] ~ dnorm(0, 0.01)
  }
  
  ## Likelihood
  
  # ecological model
  for (i in 1:nsite){
    logit(psi[i,1]) <-  alpha.psi + beta.psi[1]*block[i] + beta.psi[2]*distEdge[i] + beta.psi[3]*basalArea[i] + beta.psi[4]*recovery[i]
    z[i,1] ~ dbern(psi[i,1])
    
    for (k in 2:nyear){
      logit(phi[i,k-1]) <- alpha.phi + beta.phi[1]*block[i] + beta.phi[2]*distEdge[i] + beta.phi[3]*basalArea[i] + beta.phi[4]*recovery[i]
      logit(gamma[i,k-1]) <- alpha.gam + beta.gam[1]*block[i] + beta.gam[2]*distEdge[i] + beta.gam[3]*basalArea[i] + beta.gam[4]*recovery[i]
      
      muZ[i,k] <- z[i,k-1]*phi[i,k-1] + (1-z[i,k-1])*gamma[i,k-1]
      z[i,k] ~ dbern(muZ[i,k])
      } #k
   } #i
   
   ## Observation model
   for (i in 1:nsite){
       for (k in 1:nyear){
         logit(p[i,k]) <-  alpha.p + beta.p[1]*block[i] + beta.p[2]*distEdge[i] + beta.p[3]*basalArea[i] + beta.p[4]*recovery[i]
         muy[i,k] <- z[i,k]*p[i,k]  # can only be detected if z=1
         y[i,k] ~ dbin(muy[i,k], nrep[i,k])
         
   # Assess model fit using Chi-squared discrepancy
   # Compute fit statistic E for observed data
   #eval[i,k] <- p[i,k]*z[i,k]  # Expected values
   #E[i,k] <- pow((y[i,k] - eval[i,k]),2) / (eval[i,k] + 0.5)
   # Generate replicate data and compute fit stats for them
   #y.new[i,k] ~ dbin(muy[i,k], nrep[i,k])
   #E.new[i,k] <- pow((y.new[i,k] - eval[i,k]),2) / (eval[i,k] + 0.5)
         
      } #k
    } #i

   
   # Derived parameters: Sample and population occupancy, growth rate and turnover
   #  psi[i,1] <- psi[i,1]
   for (i in 1:nsite){
     for (k in 2:nyear){
       psi[i,k] <- psi[i,k-1]*phi[i,k-1] + (1-psi[i,k-1])*gamma[i,k-1]
       growthr[i,k-1] <- psi[i,k]/psi[i,k-1]  # originally we had growthr[k]. JAGS seem to dislike vectoring going from 2..K.
       turnover[i,k-1] <- (1 - psi[i,k-1]) * gamma[i,k-1]/psi[i,k]
     } # k
    } #i
    #fit <- sum(E[,])
    #fit.new <- sum(E.new[,])
}

